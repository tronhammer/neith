==================
Under-neith It All
==================

Where the Destinies of Deities and Pharaohs are woven by the threads of Neiths Loom

Installs will eventually be done by a simplified installer in

	/bin/bash ./bin/install

Neith
=====

This will be a command and control engine utilizing python.  It will be used to interface several language for learning purposes in order to better master the various paradigms used in common scenarios.  From there, it will interface command modules with clients and allow for content flow between two systems based on a permission set advocated to the client.

Be-neith The Surface
====================

Neiths Loom
-----------

    The central cortex of the application. Its main function is to accept 
    incomming connections, identify Commands, create Clients, verify 
    Client authentication and token distribution, and if the permission 
    set allows for it, forward commands from one Client to another

A Pharaoh
---------

    A Client created by Neiths Loom that has a session access token and 
    a preloaded package of destinies.
    
    These are created via command line interface::
        
        $: neith/bin/create_deity -n "NAME" -c "COMMAND, ..." -d "DISTO_TYPE"
    
    Dieties will then be made available in::
        
        $: neith/deities/clients/DISTRO_TYPE/NAME
        
    The server admin can then distribute the Deity Client to trusted parties
    
Deity
-----

    A Client created by Neiths Loom that has a permanant access token and 
    a preloaded package of destinies. 
    
    These are created via command line interface::
        
        $: neith/bin/create_deity -n "NAME" -c "COMMAND, ..." -d "DISTO_TYPE"
    
    Dieties will then be made available in::
        
        $: neith/deities/clients/DISTRO_TYPE/NAME
        
    The server admin can then distribute the Deity Client to trusted parties

Destiny
-------

    A Command issued from Neiths Loom by which all Dynasties must obay. 
    Commands advocated are generally limited to the capabilities of the 
    Dynasty.


=============
More to come!
=============

Plans for the future

* client signatures
* PyDoc and PyPI configurations
* File listener
* Port listener
* Extendable command options
* Client lock down
* Key distribution and localization
* Encrypted traffic on both ends

Plans for utilization
---------------------

1) Maintaining contact with all owned devices in order to establish coordinated rules and effects based on state changes int he device
2) Allowing for commands to be sent from non local devices based on authentication measures executed by Neith
3) Providing a transportable communication layer that can be interacted with via a multitude of platforms and languages
